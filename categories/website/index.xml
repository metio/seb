<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Website on Sebastian Hoß</title><link>https://seb.xn--ho-hia.de/categories/website/</link><description>Recent content in Website on Sebastian Hoß</description><generator>Hugo</generator><language>en</language><lastBuildDate>Fri, 06 Jan 2023 16:40:24 +0100</lastBuildDate><atom:link href="https://seb.xn--ho-hia.de/categories/website/index.xml" rel="self" type="application/rss+xml"/><item><title>Service workers with Hugo</title><link>https://seb.xn--ho-hia.de/posts/hugo-serviceworkers/</link><pubDate>Mon, 25 Jan 2021 00:00:00 +0000</pubDate><guid>https://seb.xn--ho-hia.de/posts/hugo-serviceworkers/</guid><description>To use a serviceworker to cache a Hugo site, configure a media type in your config.toml:
[mediaTypes.&amp;#34;application/javascript&amp;#34;] suffixes = [&amp;#34;js&amp;#34;] [outputFormats.ServiceWorker] name = &amp;#34;ServiceWorker&amp;#34; mediaType = &amp;#34;application/javascript&amp;#34; baseName = &amp;#34;serviceworker&amp;#34; isPlainText = false rel = &amp;#34;alternate&amp;#34; isHTML = false noUgly = true permalinkable = false Create a new layout in _default/home.serviceworker.js with the following content:
const CACHE = &amp;#39;cache-and-update&amp;#39;; self.addEventListener(&amp;#39;install&amp;#39;, (event) =&amp;gt; { event.waitUntil(precache()); }); self.addEventListener(&amp;#39;fetch&amp;#39;, (event) =&amp;gt; { event.respondWith(fromCache(event.request)); event.</description></item><item><title>Web app manifests with Hugo</title><link>https://seb.xn--ho-hia.de/posts/hugo-webmanifest/</link><pubDate>Mon, 11 Jan 2021 00:00:00 +0000</pubDate><guid>https://seb.xn--ho-hia.de/posts/hugo-webmanifest/</guid><description>To publish a web app manifest document with your Hugo site, configure a media type in your config.toml:
[mediaTypes.&amp;#34;application/manifest+json&amp;#34;] suffixes = [&amp;#34;webmanifest&amp;#34;] [outputFormats.Webmanifest] name = &amp;#34;Web App Manifest&amp;#34; mediaType = &amp;#34;application/manifest+json&amp;#34; baseName = &amp;#34;manifest&amp;#34; isPlainText = false rel = &amp;#34;alternate&amp;#34; isHTML = false noUgly = true permalinkable = false Create a new layout in _default/home.manifest.json with the following content:
{ &amp;#34;name&amp;#34;: &amp;#34;{{ .Site.Title }}&amp;#34;, &amp;#34;short_name&amp;#34;: &amp;#34;{{ .Site.Title }}&amp;#34;, &amp;#34;start_url&amp;#34;: &amp;#34;.&amp;#34;, &amp;#34;display&amp;#34;: &amp;#34;minimal-ui&amp;#34;, &amp;#34;background_color&amp;#34;: &amp;#34;#fff&amp;#34;, &amp;#34;description&amp;#34;: &amp;#34;{{ .</description></item><item><title>Bundling with Hugo</title><link>https://seb.xn--ho-hia.de/posts/hugo-bundles/</link><pubDate>Mon, 28 Dec 2020 00:00:00 +0000</pubDate><guid>https://seb.xn--ho-hia.de/posts/hugo-bundles/</guid><description>Hugo allows bundling of assets with several built-in functions:
{{ $normalize := resources.Get &amp;#34;/css/normalize.css&amp;#34; }} {{ $font := resources.Get &amp;#34;/css/font.css&amp;#34; }} {{ $header := resources.Get &amp;#34;/css/header.css&amp;#34; }} {{ $footer := resources.Get &amp;#34;/css/footer.css&amp;#34; }} {{ $navigation := resources.Get &amp;#34;/css/navigation.css&amp;#34; }} {{ $navigation_mobile := resources.Get &amp;#34;/css/navigation-mobile.css&amp;#34; }} {{ $layout := resources.Get &amp;#34;/css/layout.css&amp;#34; }} {{ $layout_mobile := resources.Get &amp;#34;/css/layout-mobile.css&amp;#34; }} {{ $syntax := resources.Get &amp;#34;/css/syntax.css&amp;#34; }} {{ $darkmode := resources.Get &amp;#34;/css/darkmode.css&amp;#34; | resources.Minify | resources.</description></item><item><title>humans.txt with Hugo</title><link>https://seb.xn--ho-hia.de/posts/hugo-humans/</link><pubDate>Mon, 14 Dec 2020 00:00:00 +0000</pubDate><guid>https://seb.xn--ho-hia.de/posts/hugo-humans/</guid><description>To publish a humans.txt document with your Hugo site, configure a media type in your config.toml:
[mediaTypes.&amp;#34;text/plain&amp;#34;] suffixes = [&amp;#34;txt&amp;#34;] [outputFormats.Humans] name = &amp;#34;Humans&amp;#34; mediaType = &amp;#34;text/plain&amp;#34; baseName = &amp;#34;humans&amp;#34; isPlainText = true rel = &amp;#34;alternate&amp;#34; isHTML = false noUgly = true permalinkable = false Create a new layout in _default/home.humans.txt with the following content:
/* TEAM */ {{ range $.Site.Data.contributors }} {{ .title }}: {{ .first_name }} {{ .last_name }} Site: {{ .</description></item><item><title>FOAF with Hugo</title><link>https://seb.xn--ho-hia.de/posts/hugo-foaf/</link><pubDate>Mon, 30 Nov 2020 00:00:00 +0000</pubDate><guid>https://seb.xn--ho-hia.de/posts/hugo-foaf/</guid><description>To publish a FOAF document with your Hugo site, configure a media type in your config.toml:
[mediaTypes.&amp;#34;application/rdf+xml&amp;#34;] suffixes = [&amp;#34;rdf&amp;#34;] [outputFormats.Foaf] name = &amp;#34;FOAF&amp;#34; mediaType = &amp;#34;application/rdf+xml&amp;#34; baseName = &amp;#34;foaf&amp;#34; isPlainText = false rel = &amp;#34;alternate&amp;#34; isHTML = false noUgly = true permalinkable = false Create a new layout in _default/home.foaf.rdf with the following content:
&amp;lt;rdf:RDF xmlns:rdf=&amp;#34;http://www.w3.org/1999/02/22-rdf-syntax-ns#&amp;#34; xmlns:rdfs=&amp;#34;http://www.w3.org/2000/01/rdf-schema#&amp;#34; xmlns:foaf=&amp;#34;http://xmlns.com/foaf/0.1/&amp;#34;&amp;gt; &amp;lt;foaf:PersonalProfileDocument rdf:about=&amp;#34;&amp;#34;&amp;gt; &amp;lt;foaf:maker rdf:resource=&amp;#34;#me&amp;#34; /&amp;gt; &amp;lt;foaf:primaryTopic rdf:resource=&amp;#34;{{ .Site.Title }}&amp;#34; /&amp;gt; &amp;lt;/foaf:PersonalProfileDocument&amp;gt; &amp;lt;foaf:Project rdf:ID=&amp;#34;{{ .</description></item><item><title>Atom Feed with Hugo</title><link>https://seb.xn--ho-hia.de/posts/hugo-atom/</link><pubDate>Mon, 16 Nov 2020 00:00:00 +0000</pubDate><guid>https://seb.xn--ho-hia.de/posts/hugo-atom/</guid><description>To publish Atom feeds for your Hugo site, configure a media type in your config.toml:
[mediaTypes.&amp;#34;application/atom+xml&amp;#34;] suffixes = [&amp;#34;xml&amp;#34;] [outputFormats.Atom] name = &amp;#34;Atom&amp;#34; mediaType = &amp;#34;application/atom+xml&amp;#34; baseName = &amp;#34;atom&amp;#34; isPlainText = false rel = &amp;#34;alternate&amp;#34; isHTML = false noUgly = true permalinkable = false Create a new layout in _default/list.atom.xml with the following content:
{{ printf `&amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;utf-8&amp;#34;?&amp;gt;` | safeHTML }} &amp;lt;feed xmlns=&amp;#34;http://www.w3.org/2005/Atom&amp;#34;{{ with site.LanguageCode }} xml:lang=&amp;#34;{{ . }}&amp;#34;{{ end }}&amp;gt; &amp;lt;generator uri=&amp;#34;https://gohugo.</description></item></channel></rss>