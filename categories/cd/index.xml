<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Cd on Sebastian Hoß</title><link>https://seb.xn--ho-hia.de/categories/cd/</link><description>Recent content in Cd on Sebastian Hoß</description><generator>Hugo</generator><language>en</language><lastBuildDate>Fri, 06 Jan 2023 16:46:32 +0100</lastBuildDate><atom:link href="https://seb.xn--ho-hia.de/categories/cd/index.xml" rel="self" type="application/rss+xml"/><item><title>Continuous Versioning with Maven</title><link>https://seb.xn--ho-hia.de/posts/maven-cd-versioning/</link><pubDate>Mon, 06 Dec 2021 00:00:00 +0000</pubDate><guid>https://seb.xn--ho-hia.de/posts/maven-cd-versioning/</guid><description>To automatically version Maven projects, I like to use the m-versions-p like this:
$ mvn versions:set -DnewVersion=my.new.version -DgenerateBackupPoms=false This will update the version property of every module in the reactor to prepare them for the next release. In case you are using GitHub Actions, consider using a timestamp.</description></item><item><title>Create Timestamp with GitHub Actions</title><link>https://seb.xn--ho-hia.de/posts/github-actions-create-timestamp/</link><pubDate>Thu, 11 Jun 2020 00:00:00 +0000</pubDate><guid>https://seb.xn--ho-hia.de/posts/github-actions-create-timestamp/</guid><description>In case you are into calver or have another reason to create a timestamp with GitHub Actions, do the following:
name: &amp;lt;PIPELINE&amp;gt; jobs: build: runs-on: &amp;lt;RUN_ON&amp;gt; steps: - name: Create release version id: &amp;lt;ID&amp;gt; run: echo &amp;#34;::set-output name=&amp;lt;NAME&amp;gt;::$(date +&amp;#39;%Y.%m.%d-%H%M%S&amp;#39;)&amp;#34; &amp;lt;PIPELINE&amp;gt;: The name of your pipeline. &amp;lt;RUN_ON&amp;gt;: The runner to use, see GitHub&amp;rsquo;s own documentation for possible values. &amp;lt;ID&amp;gt;: The unique ID of the timestamp step. &amp;lt;NAME&amp;gt;: The name of the created timestamp.</description></item></channel></rss>