<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Github on Sebastian Hoß</title><link>https://seb.xn--ho-hia.de/tags/github/</link><description>Recent content in Github on Sebastian Hoß</description><generator>Hugo</generator><language>en</language><lastBuildDate>Fri, 06 Jan 2023 17:32:06 +0100</lastBuildDate><atom:link href="https://seb.xn--ho-hia.de/tags/github/index.xml" rel="self" type="application/rss+xml"/><item><title>GitHub Packages with Maven</title><link>https://seb.xn--ho-hia.de/posts/github-maven-packages/</link><pubDate>Mon, 22 Nov 2021 00:00:00 +0000</pubDate><guid>https://seb.xn--ho-hia.de/posts/github-maven-packages/</guid><description>GitHub Packages can be used to host Maven packages with the following configuration in your ~/.m2/settings.xml:
&amp;lt;settings&amp;gt; &amp;lt;profiles&amp;gt; &amp;lt;profile&amp;gt; &amp;lt;id&amp;gt;github&amp;lt;/id&amp;gt; &amp;lt;repositories&amp;gt; &amp;lt;repository&amp;gt; &amp;lt;id&amp;gt;maven-build-process&amp;lt;/id&amp;gt; &amp;lt;name&amp;gt;GitHub maven-build-process Apache Maven Packages&amp;lt;/name&amp;gt; &amp;lt;url&amp;gt;https://maven.pkg.github.com/metio/maven-build-process&amp;lt;/url&amp;gt; &amp;lt;releases&amp;gt; &amp;lt;enabled&amp;gt;true&amp;lt;/enabled&amp;gt; &amp;lt;/releases&amp;gt; &amp;lt;snapshots&amp;gt; &amp;lt;enabled&amp;gt;true&amp;lt;/enabled&amp;gt; &amp;lt;/snapshots&amp;gt; &amp;lt;/repository&amp;gt; &amp;lt;repository&amp;gt; &amp;lt;id&amp;gt;hcf4j&amp;lt;/id&amp;gt; &amp;lt;name&amp;gt;GitHub hcf4j Apache Maven Packages&amp;lt;/name&amp;gt; &amp;lt;url&amp;gt;https://maven.pkg.github.com/metio/hcf4j&amp;lt;/url&amp;gt; &amp;lt;releases&amp;gt; &amp;lt;enabled&amp;gt;true&amp;lt;/enabled&amp;gt; &amp;lt;/releases&amp;gt; &amp;lt;snapshots&amp;gt; &amp;lt;enabled&amp;gt;true&amp;lt;/enabled&amp;gt; &amp;lt;/snapshots&amp;gt; &amp;lt;/repository&amp;gt; &amp;lt;/repositories&amp;gt; &amp;lt;/profile&amp;gt; &amp;lt;/profiles&amp;gt; &amp;lt;servers&amp;gt; &amp;lt;server&amp;gt; &amp;lt;id&amp;gt;maven-build-process&amp;lt;/id&amp;gt; &amp;lt;username&amp;gt;USERNAME&amp;lt;/username&amp;gt; &amp;lt;password&amp;gt;GITHUB_TOKEN&amp;lt;/password&amp;gt; &amp;lt;/server&amp;gt; &amp;lt;server&amp;gt; &amp;lt;id&amp;gt;hcf4j&amp;lt;/id&amp;gt; &amp;lt;username&amp;gt;USERNAME&amp;lt;/username&amp;gt; &amp;lt;password&amp;gt;GITHUB_TOKEN&amp;lt;/password&amp;gt; &amp;lt;/server&amp;gt; &amp;lt;/servers&amp;gt; &amp;lt;/settings&amp;gt; You will have to add another repository/server for each project you are fetching from GitHub.</description></item><item><title>Analyze Maven projects with SonarCloud using GitHub Actions</title><link>https://seb.xn--ho-hia.de/posts/maven-github-sonarcloud/</link><pubDate>Mon, 03 May 2021 00:00:00 +0000</pubDate><guid>https://seb.xn--ho-hia.de/posts/maven-github-sonarcloud/</guid><description>To analyze Maven projects with SonarCloud using GitHub Actions, first create the following settings.xml file:
&amp;lt;settings xmlns=&amp;#34;http://maven.apache.org/SETTINGS/1.0.0&amp;#34; xmlns:xsi=&amp;#34;http://www.w3.org/2001/XMLSchema-instance&amp;#34; xsi:schemaLocation=&amp;#34;http://maven.apache.org/SETTINGS/1.0.0 http://maven.apache.org/xsd/settings-1.0.0.xsd&amp;#34;&amp;gt; &amp;lt;pluginGroups&amp;gt; &amp;lt;pluginGroup&amp;gt;org.sonarsource.scanner.maven&amp;lt;/pluginGroup&amp;gt; &amp;lt;/pluginGroups&amp;gt; &amp;lt;activeProfiles&amp;gt; &amp;lt;activeProfile&amp;gt;sonar&amp;lt;/activeProfile&amp;gt; &amp;lt;/activeProfiles&amp;gt; &amp;lt;profiles&amp;gt; &amp;lt;profile&amp;gt; &amp;lt;id&amp;gt;sonar&amp;lt;/id&amp;gt; &amp;lt;properties&amp;gt; &amp;lt;sonar.host.url&amp;gt;https://sonarcloud.io&amp;lt;/sonar.host.url&amp;gt; &amp;lt;sonar.organization&amp;gt;YOUR_ORG&amp;lt;/sonar.organization&amp;gt; &amp;lt;sonar.projectKey&amp;gt;YOUR_PROJECT&amp;lt;/sonar.projectKey&amp;gt; &amp;lt;sonar.login&amp;gt;${env.SONAR_TOKEN}&amp;lt;/sonar.login&amp;gt; &amp;lt;/properties&amp;gt; &amp;lt;/profile&amp;gt; &amp;lt;/profiles&amp;gt; &amp;lt;/settings&amp;gt; Finally, add a step to your workflow:
- name: Verify Project run: mvn --settings $GITHUB_WORKSPACE/settings.xml verify sonar:sonar env: SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }} Links https://maven.apache.org/settings.html https://docs.sonarqube.org/latest/analysis/scan/sonarscanner-for-maven/</description></item><item><title>Delay GitHub Actions builds</title><link>https://seb.xn--ho-hia.de/posts/github-actions-schedule-build/</link><pubDate>Mon, 22 Feb 2021 00:00:00 +0000</pubDate><guid>https://seb.xn--ho-hia.de/posts/github-actions-schedule-build/</guid><description>To delay the execution of an GitHub Action, use a mixture of the on: schedule: ... configuration, and a conditional build step.
name: &amp;lt;PIPELINE&amp;gt; on: schedule: - cron: &amp;#39;&amp;lt;CRON&amp;gt;&amp;#39; jobs: build: runs-on: &amp;lt;RUN_ON&amp;gt; steps: - name: Count commits in last week id: commits run: echo &amp;#34;::set-output name=count::$(git rev-list --count HEAD --since=&amp;#39;&amp;lt;DATE&amp;gt;&amp;#39;)&amp;#34; - name: Build project if: steps.commits.outputs.count &amp;gt; 0 run: build-project &amp;lt;PIPELINE&amp;gt;: The name of your pipeline. &amp;lt;RUN_ON&amp;gt;: The runner to use, see GitHub&amp;rsquo;s own documentation for possible values.</description></item><item><title>Send toots with GitHub Actions</title><link>https://seb.xn--ho-hia.de/posts/github-actions-send-toot/</link><pubDate>Mon, 16 Nov 2020 00:00:00 +0000</pubDate><guid>https://seb.xn--ho-hia.de/posts/github-actions-send-toot/</guid><description>The rzr/fediverse-action action allows to send a toot in your GitHub Action.
name: &amp;lt;NAME&amp;gt; jobs: build: runs-on: &amp;lt;RUN_ON&amp;gt; steps: - name: Publish Toot uses: rzr/fediverse-action@master with: access-token: ${{ secrets.MASTODON_TOKEN }} message: &amp;lt;MESSAGE&amp;gt; host: ${{ secrets.MASTODON_SERVER }} &amp;lt;PIPELINE&amp;gt;: The name of your pipeline. &amp;lt;RUN_ON&amp;gt;: The runner to use, see GitHub&amp;rsquo;s own documentation for possible values. &amp;lt;MESSAGE&amp;gt;: Message for the toot.</description></item><item><title>Send emails with GitHub Actions</title><link>https://seb.xn--ho-hia.de/posts/github-actions-send-email/</link><pubDate>Mon, 02 Nov 2020 00:00:00 +0000</pubDate><guid>https://seb.xn--ho-hia.de/posts/github-actions-send-email/</guid><description>The dawidd6/action-send-mail action allows to send an email in your GitHub Action.
name: &amp;lt;PIPELINE&amp;gt; jobs: build: runs-on: &amp;lt;RUN_ON&amp;gt; steps: - name: Send mail uses: dawidd6/action-send-mail@v3 with: server_address: ${{ secrets.MAIL_SERVER }} server_port: ${{ secrets.MAIL_PORT }} username: ${{ secrets.MAIL_USERNAME }} password: ${{ secrets.MAIL_PASSWORD }} subject: &amp;lt;SUBJECT&amp;gt; body: &amp;lt;BODY&amp;gt; to: ${{ secrets.MAIL_RECIPIENT }} from: ${{ secrets.MAIL_SENDER }} &amp;lt;PIPELINE&amp;gt;: The name of your pipeline. &amp;lt;RUN_ON&amp;gt;: The runner to use, see GitHub&amp;rsquo;s own documentation for possible values.</description></item><item><title>Upload release assets with GitHub Actions</title><link>https://seb.xn--ho-hia.de/posts/github-actions-upload-release-assets/</link><pubDate>Mon, 19 Oct 2020 00:00:00 +0000</pubDate><guid>https://seb.xn--ho-hia.de/posts/github-actions-upload-release-assets/</guid><description>The actions/upload-release-asset action allows to upload a release artifact in your GitHub Action.
name: &amp;lt;PIPELINE&amp;gt; jobs: build: runs-on: &amp;lt;RUN_ON&amp;gt; steps: - name: Upload Release Asset id: upload_release_asset uses: actions/upload-release-asset@v1 env: GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} with: upload_url: ${{ steps.create_release.outputs.upload_url }} asset_path: ./some/path/to/file.zip asset_name: public-name-for-file.zip asset_content_type: application/zip &amp;lt;PIPELINE&amp;gt;: The name of your pipeline. &amp;lt;RUN_ON&amp;gt;: The runner to use, see GitHub&amp;rsquo;s own documentation for possible values.</description></item><item><title>Create GitHub releases with GitHub Actions</title><link>https://seb.xn--ho-hia.de/posts/github-actions-create-release/</link><pubDate>Mon, 05 Oct 2020 00:00:00 +0000</pubDate><guid>https://seb.xn--ho-hia.de/posts/github-actions-create-release/</guid><description>The actions/create-release action allows to create a new GitHub releases in your GitHub Action.
name: &amp;lt;PIPELINE&amp;gt; jobs: build: runs-on: &amp;lt;RUN_ON&amp;gt; steps: - name: Create Release uses: actions/create-release@v1 env: GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} with: tag_name: &amp;lt;TAG&amp;gt; release_name: &amp;lt;RELEASE&amp;gt; draft: false prerelease: false body: | Your release text here Some code block: ```yaml yaml: inside: of: another: yaml ``` &amp;lt;PIPELINE&amp;gt;: The name of your pipeline. &amp;lt;RUN_ON&amp;gt;: The runner to use, see GitHub&amp;rsquo;s own documentation for possible values.</description></item><item><title>Publish Hugo site with GitHub Actions</title><link>https://seb.xn--ho-hia.de/posts/github-actions-publish-hugo-site/</link><pubDate>Mon, 21 Sep 2020 00:00:00 +0000</pubDate><guid>https://seb.xn--ho-hia.de/posts/github-actions-publish-hugo-site/</guid><description>The peaceiris/actions-gh-pages action allows to publish a Hugo site in your GitHub Action.
name: &amp;lt;PIPELINE&amp;gt; jobs: build: runs-on: &amp;lt;RUN_ON&amp;gt; steps: - name: Deploy Website uses: peaceiris/actions-gh-pages@v3 with: github_token: ${{ secrets.GITHUB_TOKEN }} publish_dir: &amp;lt;PUBLISH_DIR&amp;gt; force_orphan: true cname: &amp;lt;CNAME&amp;gt; &amp;lt;PIPELINE&amp;gt;: The name of your pipeline. &amp;lt;RUN_ON&amp;gt;: The runner to use, see GitHub&amp;rsquo;s own documentation for possible values. &amp;lt;PUBLISH_DIR&amp;gt;: The file system location of the built site. &amp;lt;CNAME&amp;gt;: The CNAME of your custom domain.</description></item><item><title>Cache Maven artifacts with GitHub Actions</title><link>https://seb.xn--ho-hia.de/posts/github-actions-cache-maven-artifacts/</link><pubDate>Mon, 07 Sep 2020 00:00:00 +0000</pubDate><guid>https://seb.xn--ho-hia.de/posts/github-actions-cache-maven-artifacts/</guid><description>The actions/cache action allows to cache artifacts in your GitHub Action.
name: &amp;lt;PIPELINE&amp;gt; jobs: build: runs-on: &amp;lt;RUN_ON&amp;gt; steps: - name: Cache Maven artifacts uses: actions/cache@v1 with: path: ~/.m2/repository key: ${{ runner.os }}-maven-${{ hashFiles(&amp;#39;**/pom.xml&amp;#39;) }} restore-keys: | ${{ runner.os }}-maven- &amp;lt;PIPELINE&amp;gt;: The name of your pipeline. &amp;lt;RUN_ON&amp;gt;: The runner to use, see GitHub&amp;rsquo;s own documentation for possible values.</description></item><item><title>Use a specific Hugo version with GitHub Actions</title><link>https://seb.xn--ho-hia.de/posts/github-actions-specify-hugo-version/</link><pubDate>Mon, 24 Aug 2020 00:00:00 +0000</pubDate><guid>https://seb.xn--ho-hia.de/posts/github-actions-specify-hugo-version/</guid><description>The actions-hugo action allows to use a specific Hugo version in your GitHub Action.
name: &amp;lt;PIPELINE&amp;gt; jobs: build: runs-on: &amp;lt;RUN_ON&amp;gt; steps: - name: Setup hugo uses: peaceiris/actions-hugo@v2 with: hugo-version: &amp;lt;HUGO_VERSION&amp;gt; &amp;lt;PIPELINE&amp;gt;: The name of your pipeline. &amp;lt;RUN_ON&amp;gt;: The runner to use, see GitHub&amp;rsquo;s own documentation for possible values. &amp;lt;HUGO_VERSION&amp;gt;: The released versions or use latest to always use the latest version of Hugo.</description></item><item><title>Use a specific Java version with GitHub Actions</title><link>https://seb.xn--ho-hia.de/posts/github-actions-specify-java-version/</link><pubDate>Mon, 10 Aug 2020 00:00:00 +0000</pubDate><guid>https://seb.xn--ho-hia.de/posts/github-actions-specify-java-version/</guid><description>The setup-java action allows to use a specific Java version in your GitHub Action.
name: &amp;lt;PIPELINE&amp;gt; jobs: build: runs-on: &amp;lt;RUN_ON&amp;gt; steps: - name: Set up JDK &amp;lt;JDK_VERSION&amp;gt; uses: actions/setup-java@v1 with: java-version: &amp;lt;JDK_VERSION&amp;gt; &amp;lt;PIPELINE&amp;gt;: The name of your pipeline. &amp;lt;RUN_ON&amp;gt;: The runner to use, see GitHub&amp;rsquo;s own documentation for possible values. &amp;lt;JDK_VERSION&amp;gt;: The required Java version for your project.</description></item><item><title>GitLab the Git Distributor</title><link>https://seb.xn--ho-hia.de/posts/gitlab-distributor/</link><pubDate>Mon, 13 Jul 2020 00:00:00 +0000</pubDate><guid>https://seb.xn--ho-hia.de/posts/gitlab-distributor/</guid><description>Git at its core is a decentralized version control system. Yet many people are relying on a single central server (github.com at the time of this writing) to share their work with others. Pro Git rightfully mentions it at first position in its chapter about distributed workflows because using a central server is usually the simplest approach to sharing code.
While the central server approach is easy to use, it might not work in all scenarios:</description></item><item><title>Create Timestamp with GitHub Actions</title><link>https://seb.xn--ho-hia.de/posts/github-actions-create-timestamp/</link><pubDate>Thu, 11 Jun 2020 00:00:00 +0000</pubDate><guid>https://seb.xn--ho-hia.de/posts/github-actions-create-timestamp/</guid><description>In case you are into calver or have another reason to create a timestamp with GitHub Actions, do the following:
name: &amp;lt;PIPELINE&amp;gt; jobs: build: runs-on: &amp;lt;RUN_ON&amp;gt; steps: - name: Create release version id: &amp;lt;ID&amp;gt; run: echo &amp;#34;::set-output name=&amp;lt;NAME&amp;gt;::$(date +&amp;#39;%Y.%m.%d-%H%M%S&amp;#39;)&amp;#34; &amp;lt;PIPELINE&amp;gt;: The name of your pipeline. &amp;lt;RUN_ON&amp;gt;: The runner to use, see GitHub&amp;rsquo;s own documentation for possible values. &amp;lt;ID&amp;gt;: The unique ID of the timestamp step. &amp;lt;NAME&amp;gt;: The name of the created timestamp.</description></item></channel></rss>