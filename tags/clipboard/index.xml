<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Clipboard on Sebastian Hoß</title><link>https://seb.xn--ho-hia.de/tags/clipboard/</link><description>Recent content in Clipboard on Sebastian Hoß</description><generator>Hugo</generator><language>en</language><lastBuildDate>Fri, 06 Jan 2023 16:40:24 +0100</lastBuildDate><atom:link href="https://seb.xn--ho-hia.de/tags/clipboard/index.xml" rel="self" type="application/rss+xml"/><item><title>passage fuzzy search</title><link>https://seb.xn--ho-hia.de/posts/passage-fuzzy-search/</link><pubDate>Tue, 27 Dec 2022 00:00:00 +0000</pubDate><guid>https://seb.xn--ho-hia.de/posts/passage-fuzzy-search/</guid><description>To fuzzy search through passwords managed with passage, I&amp;rsquo;ve written the following script that is inspired by the upstream version which is using fzf.
fd --type=file --base-directory=&amp;#34;${PASSAGE_DIR:-${HOME}/.passage/store}&amp;#34; .age --exec echo &amp;#39;{.}&amp;#39; | \ sk --cycle --layout=reverse --tiebreak=score --no-multi | \ xargs --replace --max-args=1 --no-run-if-empty \ passage show --clip=1 {} This version requires fd, skim, xargs, and passage itself of course. The detailed breakdown on how it works is as follows:</description></item></channel></rss>