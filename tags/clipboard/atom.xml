<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://gohugo.io/" version="0.128.0">Hugo</generator><title type="html">Clipboard on Sebastian Ho√ü</title><link href="https://seb.xn--ho-hia.de/tags/clipboard/" rel="alternate" type="text/html" title="html"/><link href="https://seb.xn--ho-hia.de/tags/clipboard/index.xml" rel="alternate" type="application/rss+xml" title="rss"/><link href="https://seb.xn--ho-hia.de/tags/clipboard/atom.xml" rel="self" type="application/atom+xml" title="atom"/><updated>2024-07-01T02:33:53+00:00</updated><id>https://seb.xn--ho-hia.de/tags/clipboard/</id><entry><title type="html">passage fuzzy search</title><link href="https://seb.xn--ho-hia.de/posts/passage-fuzzy-search/?utm_source=atom_feed" rel="alternate" type="text/html"/><id>https://seb.xn--ho-hia.de/posts/passage-fuzzy-search/</id><published>2022-12-27T00:00:00+00:00</published><updated>2023-01-06T16:40:24+01:00</updated><content type="html"><![CDATA[<p>To fuzzy search through passwords managed with <a href="https://github.com/FiloSottile/passage">passage</a>, I&rsquo;ve written the following script that is inspired by the upstream version which is using <code>fzf</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">fd --type<span class="o">=</span>file --base-directory<span class="o">=</span><span class="s2">&#34;</span><span class="si">${</span><span class="nv">PASSAGE_DIR</span><span class="k">:-</span><span class="si">${</span><span class="nv">HOME</span><span class="si">}</span><span class="p">/.passage/store</span><span class="si">}</span><span class="s2">&#34;</span> .age --exec <span class="nb">echo</span> <span class="s1">&#39;{.}&#39;</span> <span class="p">|</span> <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>  sk --cycle --layout<span class="o">=</span>reverse --tiebreak<span class="o">=</span>score --no-multi <span class="p">|</span> <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>  xargs --replace --max-args<span class="o">=</span><span class="m">1</span> --no-run-if-empty <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    passage show --clip<span class="o">=</span><span class="m">1</span> <span class="o">{}</span>
</span></span></code></pre></div><p>This version requires <a href="https://github.com/sharkdp/fd/">fd</a>, <a href="https://github.com/lotabout/skim">skim</a>, <a href="https://www.gnu.org/software/findutils/manual/html_node/find_html/Invoking-xargs.html">xargs</a>, and <a href="https://github.com/FiloSottile/passage">passage</a> itself of course. The detailed breakdown on how it works is as follows:</p>
<ol>
<li>Use <code>fd</code> to find all files within <code>${PASSAGE_DIR}</code> that end in <code>.age</code>. Each password in passage is inside that folder and has such a file extensions, therefore we are selecting every password we have.</li>
<li>Using both <code>--base-directory</code> and <code>--exec echo '{.}'</code> ensures that passwords are returned in such form that they can be passed back into <code>passage</code> again. The placeholder <code>'{.}'</code> is a feature provided by <code>fd</code> which strips the file extension from each returned value.</li>
<li>All passwords are then passed into <code>sk</code> to allow to fuzzy search across them all. Setting <code>--no-multi</code> ensures that only a single password can be selected.</li>
<li>Finally, <code>xargs</code> calls <code>passage</code> and replaces the curly braces with the selected password. Thanks to <code>--clip=1</code>, the first line in the selected password entry will be copied to the clipboard and automatically cleared after 45 seconds.</li>
</ol>
<p>To call that script, I&rsquo;ve saved it as <code>passage-fuzzy-search.sh</code> in my <code>.local/bin</code> folder and added some checks into it to verify that every required software is actually installed.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl"><span class="cp">#!/usr/bin/env zsh
</span></span></span><span class="line"><span class="cl"><span class="cp"></span>
</span></span><span class="line"><span class="cl"><span class="c1">###############################################################################</span>
</span></span><span class="line"><span class="cl"><span class="c1"># This shell script presents passwords saved with passage through skim</span>
</span></span><span class="line"><span class="cl"><span class="c1">#</span>
</span></span><span class="line"><span class="cl"><span class="c1"># Call it like this:</span>
</span></span><span class="line"><span class="cl"><span class="c1">#   passage-fuzzy-search.sh</span>
</span></span><span class="line"><span class="cl"><span class="c1">#</span>
</span></span><span class="line"><span class="cl"><span class="c1"># Required software that isn&#39;t in GNU coreutils:</span>
</span></span><span class="line"><span class="cl"><span class="c1">#   - &#39;passage&#39; to read passwords</span>
</span></span><span class="line"><span class="cl"><span class="c1">#   - &#39;fd&#39; to find passwords</span>
</span></span><span class="line"><span class="cl"><span class="c1">#   - &#39;sk&#39; to filter passwords</span>
</span></span><span class="line"><span class="cl"><span class="c1">###############################################################################</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">if</span> ! <span class="o">((</span> <span class="si">${</span><span class="p">+commands[passage]</span><span class="si">}</span> <span class="o">))</span><span class="p">;</span> <span class="k">then</span>
</span></span><span class="line"><span class="cl">    <span class="nb">echo</span> <span class="s1">&#39;passage not installed. Please install passage.&#39;</span>
</span></span><span class="line"><span class="cl">    <span class="nb">exit</span>
</span></span><span class="line"><span class="cl"><span class="k">fi</span>
</span></span><span class="line"><span class="cl"><span class="k">if</span> ! <span class="o">((</span> <span class="si">${</span><span class="p">+commands[sk]</span><span class="si">}</span> <span class="o">))</span><span class="p">;</span> <span class="k">then</span>
</span></span><span class="line"><span class="cl">    <span class="nb">echo</span> <span class="s1">&#39;sk not installed. Please install skim.&#39;</span>
</span></span><span class="line"><span class="cl">    <span class="nb">exit</span>
</span></span><span class="line"><span class="cl"><span class="k">fi</span>
</span></span><span class="line"><span class="cl"><span class="k">if</span> ! <span class="o">((</span> <span class="si">${</span><span class="p">+commands[fd]</span><span class="si">}</span> <span class="o">))</span><span class="p">;</span> <span class="k">then</span>
</span></span><span class="line"><span class="cl">    <span class="nb">echo</span> <span class="s1">&#39;fd not installed. Please install fd-find.&#39;</span>
</span></span><span class="line"><span class="cl">    <span class="nb">exit</span>
</span></span><span class="line"><span class="cl"><span class="k">fi</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">fd --type<span class="o">=</span>file --base-directory<span class="o">=</span><span class="s2">&#34;</span><span class="si">${</span><span class="nv">PASSAGE_DIR</span><span class="k">:-</span><span class="si">${</span><span class="nv">HOME</span><span class="si">}</span><span class="p">/.passage/store</span><span class="si">}</span><span class="s2">&#34;</span> .age --exec <span class="nb">echo</span> <span class="s1">&#39;{.}&#39;</span> <span class="p">|</span> <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>  sk --cycle --layout<span class="o">=</span>reverse --tiebreak<span class="o">=</span>score --no-multi <span class="p">|</span> <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>  xargs --replace --max-args<span class="o">=</span><span class="m">1</span> --no-run-if-empty <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    passage show --clip<span class="o">=</span><span class="m">1</span> <span class="o">{}</span>
</span></span></code></pre></div><p>Since typing <code>passage-fuzzy-search.sh</code> is way too long, I have added an alias like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl"><span class="nb">alias</span> <span class="nv">pp</span><span class="o">=</span><span class="s1">&#39;passage-fuzzy-search.sh&#39;</span>
</span></span></code></pre></div>]]></content><category scheme="https://seb.xn--ho-hia.de/categories/snippet" term="snippet" label="snippet"/><category scheme="https://seb.xn--ho-hia.de/tags/passage" term="passage" label="passage"/><category scheme="https://seb.xn--ho-hia.de/tags/age" term="age" label="age"/><category scheme="https://seb.xn--ho-hia.de/tags/fuzzy" term="fuzzy" label="fuzzy"/><category scheme="https://seb.xn--ho-hia.de/tags/search" term="search" label="search"/><category scheme="https://seb.xn--ho-hia.de/tags/clipboard" term="clipboard" label="clipboard"/></entry></feed>