<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://gohugo.io/" version="0.128.0">Hugo</generator><title type="html">Atom on Sebastian Hoß</title><link href="https://seb.xn--ho-hia.de/tags/atom/" rel="alternate" type="text/html" title="html"/><link href="https://seb.xn--ho-hia.de/tags/atom/index.xml" rel="alternate" type="application/rss+xml" title="rss"/><link href="https://seb.xn--ho-hia.de/tags/atom/atom.xml" rel="self" type="application/atom+xml" title="atom"/><updated>2024-07-01T02:33:53+00:00</updated><id>https://seb.xn--ho-hia.de/tags/atom/</id><entry><title type="html">Atom Feed with Hugo</title><link href="https://seb.xn--ho-hia.de/posts/hugo-atom/?utm_source=atom_feed" rel="alternate" type="text/html"/><link href="https://seb.xn--ho-hia.de/posts/github-actions-publish-hugo-site/?utm_source=atom_feed" rel="related" type="text/html" title="Publish Hugo site with GitHub Actions"/><link href="https://seb.xn--ho-hia.de/posts/github-actions-specify-hugo-version/?utm_source=atom_feed" rel="related" type="text/html" title="Use a specific Hugo version with GitHub Actions"/><id>https://seb.xn--ho-hia.de/posts/hugo-atom/</id><published>2020-11-16T00:00:00+00:00</published><updated>2023-01-06T16:40:24+01:00</updated><content type="html"><![CDATA[<p>To publish Atom feeds for your <a href="https://gohugo.io/">Hugo</a> site, configure a <a href="https://en.wikipedia.org/wiki/Media_type">media type</a> in your <code>config.toml</code>:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-toml" data-lang="toml"><span class="line"><span class="cl"><span class="p">[</span><span class="nx">mediaTypes</span><span class="p">.</span><span class="s2">&#34;application/atom+xml&#34;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">  <span class="nx">suffixes</span> <span class="p">=</span> <span class="p">[</span><span class="s2">&#34;xml&#34;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl"><span class="p">[</span><span class="nx">outputFormats</span><span class="p">.</span><span class="nx">Atom</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">  <span class="nx">name</span> <span class="p">=</span> <span class="s2">&#34;Atom&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="nx">mediaType</span> <span class="p">=</span> <span class="s2">&#34;application/atom+xml&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="nx">baseName</span> <span class="p">=</span> <span class="s2">&#34;atom&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="nx">isPlainText</span> <span class="p">=</span> <span class="kc">false</span>
</span></span><span class="line"><span class="cl">  <span class="nx">rel</span> <span class="p">=</span> <span class="s2">&#34;alternate&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="nx">isHTML</span> <span class="p">=</span> <span class="kc">false</span>
</span></span><span class="line"><span class="cl">  <span class="nx">noUgly</span> <span class="p">=</span> <span class="kc">true</span>
</span></span><span class="line"><span class="cl">  <span class="nx">permalinkable</span> <span class="p">=</span> <span class="kc">false</span>
</span></span></code></pre></div><p>Create a new layout in <code>_default/list.atom.xml</code> with the following content:</p>
<pre tabindex="0"><code class="language-gotemplate" data-lang="gotemplate">{{ printf `&lt;?xml version=&#34;1.0&#34; encoding=&#34;utf-8&#34;?&gt;` | safeHTML }}
&lt;feed xmlns=&#34;http://www.w3.org/2005/Atom&#34;{{ with site.LanguageCode }} xml:lang=&#34;{{ . }}&#34;{{ end }}&gt;
    &lt;generator uri=&#34;https://gohugo.io/&#34; version=&#34;{{ hugo.Version }}&#34;&gt;Hugo&lt;/generator&gt;
    {{- $title := site.Title -}}
    {{- with .Title -}}
        {{- if (not (eq . site.Title)) -}}
            {{- $title = printf `%s %s %s` . (i18n &#34;feed_title_on&#34; | default &#34;on&#34;) site.Title -}}
        {{- end -}}
    {{- end -}}
    {{- if .IsTranslated -}}
        {{ $title = printf &#34;%s (%s)&#34; $title (index site.Data.i18n.languages .Lang) }}
    {{- end -}}
    {{ printf `&lt;title type=&#34;html&#34;&gt;&lt;![CDATA[%s]]&gt;&lt;/title&gt;` $title | safeHTML }}
    {{ with (or (.Param &#34;subtitle&#34;) (.Param &#34;tagline&#34;)) }}
        {{ printf `&lt;subtitle type=&#34;html&#34;&gt;&lt;![CDATA[%s]]&gt;&lt;/subtitle&gt;` . | safeHTML }}
    {{ end }}
    {{ $output_formats := .OutputFormats }}
    {{ range $output_formats -}}
        {{- $rel := (or (and (eq &#34;atom&#34; (.Name | lower)) &#34;self&#34;) &#34;alternate&#34;) -}}
        {{ with $output_formats.Get .Name }}
            {{ printf `&lt;link href=%q rel=%q type=%q title=%q /&gt;` .Permalink $rel .MediaType.Type .Name | safeHTML }}
        {{- end -}}
    {{- end }}
    {{- range .Translations }}
        {{ $output_formats := .OutputFormats }}
        {{- $lang := .Lang }}
        {{- $langstr := index site.Data.i18n.languages .Lang }}
        {{ range $output_formats -}}
            {{ with $output_formats.Get .Name }}
                {{ printf `&lt;link href=%q rel=&#34;alternate&#34; type=%q hreflang=%q title=&#34;[%s] %s&#34; /&gt;` .Permalink .MediaType.Type $lang $langstr .Name | safeHTML }}
            {{- end -}}
        {{- end }}
    {{- end }}
    &lt;updated&gt;{{ now.Format &#34;2006-01-02T15:04:05-07:00&#34; | safeHTML }}&lt;/updated&gt;
    {{ with site.Copyright }}
        {{- $copyright := replace . &#34;{year}&#34; now.Year -}} {{/* In case the site.copyright uses a special string &#34;{year}&#34; */}}
        {{- $copyright = replace $copyright &#34;&amp;copy;&#34; &#34;©&#34; -}}
        &lt;rights&gt;{{ $copyright | plainify }}&lt;/rights&gt;
    {{- end }}
    {{ with .Param &#34;feed&#34; }}
        {{/* For this to work, the $icon file should be present in the assets/ directory */}}
        {{- $icon := .icon | default &#34;icon.svg&#34; -}}
        {{- with resources.Get $icon -}}
            &lt;icon&gt;{{ (. | fingerprint).Permalink }}&lt;/icon&gt;
        {{- end }}

        {{/* For this to work, the $logo file should be present in the assets/ directory */}}
        {{- $logo := .logo | default &#34;logo.svg&#34; -}}
        {{- with resources.Get $logo -}}
            &lt;logo&gt;{{ (. | fingerprint).Permalink }}&lt;/logo&gt;
        {{- end }}
    {{ end }}
    {{ with site.Author.name -}}
        &lt;author&gt;
            &lt;name&gt;{{ . }}&lt;/name&gt;
            {{ with site.Author.email }}
                &lt;email&gt;{{ . }}&lt;/email&gt;
            {{ end -}}
        &lt;/author&gt;
    {{- end }}
    {{ with site.Params.id }}
        &lt;id&gt;{{ . | plainify }}&lt;/id&gt;
    {{ else }}
        &lt;id&gt;{{ .Permalink }}&lt;/id&gt;
    {{ end }}
    {{- $limit := (cond (le site.Config.Services.RSS.Limit 0) 65536 site.Config.Services.RSS.Limit) }}
    {{- $feed_sections := site.Params.feedSections | default site.Params.mainSections -}}
    {{/* Range through only the pages with a Type in $feed_sections. */}}
    {{- $pages := where .RegularPages &#34;Type&#34; &#34;in&#34; $feed_sections -}}
    {{- if (eq .Kind &#34;home&#34;) -}}
        {{- $pages = where site.RegularPages &#34;Type&#34; &#34;in&#34; $feed_sections -}}
    {{- end -}}
    {{/* Remove the pages that have the disable_feed parameter set to true. */}}
    {{- $pages = where $pages &#34;.Params.disable_feed&#34; &#34;!=&#34; true -}}
    {{- range first $limit $pages }}
        {{ $page := . }}
        &lt;entry&gt;
            {{ printf `&lt;title type=&#34;html&#34;&gt;&lt;![CDATA[%s]]&gt;&lt;/title&gt;` .Title | safeHTML }}
            &lt;link href=&#34;{{ .Permalink }}?utm_source=atom_feed&#34; rel=&#34;alternate&#34; type=&#34;text/html&#34; /&gt;
            {{- range .Translations }}
                {{- $link := printf &#34;%s?utm_source=atom_feed&#34; .Permalink | safeHTML }}
                {{- printf `&lt;link href=%q rel=&#34;alternate&#34; type=&#34;text/html&#34; hreflang=%q /&gt;` $link .Lang | safeHTML }}
            {{- end }}
            {{/* rel=related: See https://validator.w3.org/feed/docs/atom.html#link */}}
            {{- range first 5 (site.RegularPages.Related .) }}
                &lt;link href=&#34;{{ .Permalink }}?utm_source=atom_feed&#34; rel=&#34;related&#34; type=&#34;text/html&#34; title=&#34;{{ .Title }}&#34; /&gt;
            {{- end }}
            {{ with .Params.id }}
                &lt;id&gt;{{ . | plainify }}&lt;/id&gt;
            {{ else }}
                &lt;id&gt;{{ .Permalink }}&lt;/id&gt;
            {{ end }}
            {{ with .Params.author -}}
                {{- range . -}} &lt;!-- Assuming the author front-matter to be a list --&gt;
                    &lt;author&gt;
                        &lt;name&gt;{{ . }}&lt;/name&gt;
                    &lt;/author&gt;
                {{- end -}}
            {{- end }}
            &lt;published&gt;{{ .Date.Format &#34;2006-01-02T15:04:05-07:00&#34; | safeHTML }}&lt;/published&gt;
            &lt;updated&gt;{{ .Lastmod.Format &#34;2006-01-02T15:04:05-07:00&#34; | safeHTML }}&lt;/updated&gt;
            {{ $description1 := .Description | default &#34;&#34; }}
            {{ $description := (cond (eq &#34;&#34; $description1) &#34;&#34; (printf &#34;&lt;blockquote&gt;%s&lt;/blockquote&gt;&#34; ($description1 | markdownify))) }}
            {{ printf `&lt;content type=&#34;html&#34;&gt;&lt;![CDATA[%s%s]]&gt;&lt;/content&gt;` $description .Content | safeHTML }}
            {{ with site.Taxonomies }}
                {{ range $taxo,$_ := . }} &lt;!-- Defaults taxos: &#34;tags&#34;, &#34;categories&#34; --&gt;
                    {{ with $page.Param $taxo }}
                        {{ $taxo_list := . }} &lt;!-- $taxo_list will be the tags/categories list --&gt;
                        {{ with site.GetPage (printf &#34;/%s&#34; $taxo) }}
                            {{ $taxonomy_page := . }}
                            {{ range $taxo_list }} &lt;!-- Below, assuming pretty URLs --&gt;
                                &lt;category scheme=&#34;{{ printf &#34;%s%s&#34; $taxonomy_page.Permalink (. | urlize) }}&#34; term=&#34;{{ (. | urlize) }}&#34; label=&#34;{{ . }}&#34; /&gt;
                            {{ end }}
                        {{ end }}
                    {{ end }}
                {{ end }}
            {{ end }}
        &lt;/entry&gt;
    {{ end }}
&lt;/feed&gt;
</code></pre>]]></content><category scheme="https://seb.xn--ho-hia.de/categories/snippet" term="snippet" label="snippet"/><category scheme="https://seb.xn--ho-hia.de/categories/website" term="website" label="website"/><category scheme="https://seb.xn--ho-hia.de/tags/hugo" term="hugo" label="hugo"/><category scheme="https://seb.xn--ho-hia.de/tags/atom" term="atom" label="atom"/></entry></feed>