<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://gohugo.io/" version="0.128.0">Hugo</generator><title type="html">Dotfiles on Sebastian Ho√ü</title><link href="https://seb.xn--ho-hia.de/tags/dotfiles/" rel="alternate" type="text/html" title="html"/><link href="https://seb.xn--ho-hia.de/tags/dotfiles/index.xml" rel="alternate" type="application/rss+xml" title="rss"/><link href="https://seb.xn--ho-hia.de/tags/dotfiles/atom.xml" rel="self" type="application/atom+xml" title="atom"/><updated>2024-07-01T02:33:53+00:00</updated><id>https://seb.xn--ho-hia.de/tags/dotfiles/</id><entry><title type="html">Using chezmoi with age</title><link href="https://seb.xn--ho-hia.de/posts/chezmoi-age/?utm_source=atom_feed" rel="alternate" type="text/html"/><link href="https://seb.xn--ho-hia.de/posts/chezmoi-gpg/?utm_source=atom_feed" rel="related" type="text/html" title="Encrypt dotfiles with chezmoi"/><link href="https://seb.xn--ho-hia.de/posts/chezmoi-auto-update/?utm_source=atom_feed" rel="related" type="text/html" title="chezmoi auto-update"/><link href="https://seb.xn--ho-hia.de/posts/shell-init/?utm_source=atom_feed" rel="related" type="text/html" title="chezmoi &amp; shell init scripts"/><link href="https://seb.xn--ho-hia.de/posts/chezmoi-maintenance/?utm_source=atom_feed" rel="related" type="text/html" title="Maintaining dotfiles with chezmoi"/><link href="https://seb.xn--ho-hia.de/posts/chezmoi-auto-git/?utm_source=atom_feed" rel="related" type="text/html" title="Manage dotfiles with chezmoi and git"/><id>https://seb.xn--ho-hia.de/posts/chezmoi-age/</id><published>2023-01-08T00:00:00+00:00</published><updated>2023-01-08T09:25:44+01:00</updated><content type="html"><![CDATA[<p><a href="https://age-encryption.org/">age</a> is another tool supported by <a href="https://www.chezmoi.io/">chezmoi</a> to <a href="https://www.chezmoi.io/docs/how-to/#keep-data-private">keep data private</a>. Compared to <code>gpg</code> it is much simpler by focusing on the encryption parts only.</p>
<p>Add the following snippet to your <code>.chezmoi.toml</code> to configure <code>chezmoi</code> to use <code>age</code>:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-toml" data-lang="toml"><span class="line"><span class="cl"><span class="nx">encryption</span> <span class="p">=</span> <span class="s2">&#34;age&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">[</span><span class="nx">age</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">  <span class="nx">identity</span> <span class="p">=</span> <span class="s2">&#34;path/to/age/private-key&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="nx">recipient</span> <span class="p">=</span> <span class="s2">&#34;age...public...key...&#34;</span>
</span></span></code></pre></div><p>Adding files to your <code>chezmoi</code> source directory remains the same as compared to using <code>gpg</code> - just call <code>chezmoi add --encrypt path/to/file</code>.</p>
]]></content><category scheme="https://seb.xn--ho-hia.de/categories/snippet" term="snippet" label="snippet"/><category scheme="https://seb.xn--ho-hia.de/tags/dotfiles" term="dotfiles" label="dotfiles"/><category scheme="https://seb.xn--ho-hia.de/tags/chezmoi" term="chezmoi" label="chezmoi"/><category scheme="https://seb.xn--ho-hia.de/tags/age" term="age" label="age"/><category scheme="https://seb.xn--ho-hia.de/tags/encryption" term="encryption" label="encryption"/></entry><entry><title type="html">chezmoi auto-update</title><link href="https://seb.xn--ho-hia.de/posts/chezmoi-auto-update/?utm_source=atom_feed" rel="alternate" type="text/html"/><link href="https://seb.xn--ho-hia.de/posts/shell-init/?utm_source=atom_feed" rel="related" type="text/html" title="chezmoi &amp; shell init scripts"/><link href="https://seb.xn--ho-hia.de/posts/chezmoi-maintenance/?utm_source=atom_feed" rel="related" type="text/html" title="Maintaining dotfiles with chezmoi"/><link href="https://seb.xn--ho-hia.de/posts/chezmoi-gpg/?utm_source=atom_feed" rel="related" type="text/html" title="Encrypt dotfiles with chezmoi"/><link href="https://seb.xn--ho-hia.de/posts/chezmoi-auto-git/?utm_source=atom_feed" rel="related" type="text/html" title="Manage dotfiles with chezmoi and git"/><link href="https://seb.xn--ho-hia.de/posts/xdg-dot-files/?utm_source=atom_feed" rel="related" type="text/html" title="XDG Base Directory Specification"/><id>https://seb.xn--ho-hia.de/posts/chezmoi-auto-update/</id><published>2022-12-26T00:00:00+00:00</published><updated>2023-01-06T17:32:06+01:00</updated><content type="html"><![CDATA[<p>To automatically synchronize dotfiles across my computers, I&rsquo;ve written the following <code>systemd</code> unit:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-systemd" data-lang="systemd"><span class="line"><span class="cl"><span class="k">[Unit]</span>
</span></span><span class="line"><span class="cl"><span class="na">Description</span><span class="o">=</span><span class="s">Update chezmoi managed dotfiles</span>
</span></span><span class="line"><span class="cl"><span class="na">After</span><span class="o">=</span><span class="s">network-online.target</span>
</span></span><span class="line"><span class="cl"><span class="na">Wants</span><span class="o">=</span><span class="s">network-online.target</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">[Service]</span>
</span></span><span class="line"><span class="cl"><span class="na">Type</span><span class="o">=</span><span class="s">oneshot</span>
</span></span><span class="line"><span class="cl"><span class="na">ExecStart</span><span class="o">=</span><span class="s">/usr/bin/chezmoi update --no-tty --force</span>
</span></span><span class="line"><span class="cl"><span class="na">RemainAfterExit</span><span class="o">=</span><span class="s">false</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">[Install]</span>
</span></span><span class="line"><span class="cl"><span class="na">WantedBy</span><span class="o">=</span><span class="s">default.target</span>
</span></span></code></pre></div><p>This unit pulls changes from upstream first and then applies the changes to the current computer after I&rsquo;m logged in and a network connection is available. The <code>--no-tty</code> flag is required because there is no tty when systemd executes <code>chezmoi</code>. Likewise, the <code>--force</code> flag ensures that no interactive prompt will be displayed which we cannot answer since <code>systemd</code> is executing this unit without us being involved.</p>
]]></content><category scheme="https://seb.xn--ho-hia.de/categories/snippet" term="snippet" label="snippet"/><category scheme="https://seb.xn--ho-hia.de/tags/chezmoi" term="chezmoi" label="chezmoi"/><category scheme="https://seb.xn--ho-hia.de/tags/dotfiles" term="dotfiles" label="dotfiles"/><category scheme="https://seb.xn--ho-hia.de/tags/automation" term="automation" label="automation"/></entry><entry><title type="html">chezmoi &amp; shell init scripts</title><link href="https://seb.xn--ho-hia.de/posts/shell-init/?utm_source=atom_feed" rel="alternate" type="text/html"/><link href="https://seb.xn--ho-hia.de/posts/chezmoi-maintenance/?utm_source=atom_feed" rel="related" type="text/html" title="Maintaining dotfiles with chezmoi"/><link href="https://seb.xn--ho-hia.de/posts/chezmoi-gpg/?utm_source=atom_feed" rel="related" type="text/html" title="Encrypt dotfiles with chezmoi"/><link href="https://seb.xn--ho-hia.de/posts/chezmoi-auto-git/?utm_source=atom_feed" rel="related" type="text/html" title="Manage dotfiles with chezmoi and git"/><link href="https://seb.xn--ho-hia.de/posts/nvim-plugin-auto-updates/?utm_source=atom_feed" rel="related" type="text/html" title="Automatically update plugins for vim/nvim"/><link href="https://seb.xn--ho-hia.de/posts/xdg-dot-files/?utm_source=atom_feed" rel="related" type="text/html" title="XDG Base Directory Specification"/><id>https://seb.xn--ho-hia.de/posts/shell-init/</id><published>2022-12-12T00:00:00+00:00</published><updated>2023-01-06T16:40:24+01:00</updated><content type="html"><![CDATA[<p>Many CLI applications offer initialization scripts to integrate into a shell, for example <code>starship init zsh</code> or <code>zoxide init zsh</code>. The documentation of these tools usually tell you to put something like <code>eval &quot;$(starship init zsh)&quot;</code> into your shell RC file. While this approach works fine, it does decrease startup speed of your shell because it needs to run the <code>init</code> command every time you open a new shell. Given that you open shells much more often than new versions of these tools are released and installed, you can cache the output of these commands to get a bit of speed back.</p>
<p><a href="https://chezmoi.io/">chezmoi</a> provides a template function called <a href="https://www.chezmoi.io/reference/templates/functions/output/">output</a> which replaces itself with the output of the command you specified. You can use that function this to integrate various tools into your shell as the following example shows while using <code>zsh</code>:</p>
<ol>
<li>Create a directory that holds all init scripts for every tool you want to use.
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl"> $ mkdir --parents <span class="s2">&#34;</span><span class="si">${</span><span class="nv">ZDOTDIR</span><span class="si">}</span><span class="s2">&#34;</span>/tools.d
</span></span></code></pre></div></li>
<li>Let your shell load all available scripts in that directory. This snippet should be part of your <code>.zshrc</code> file:
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl"><span class="k">for</span> init_script in <span class="s2">&#34;</span><span class="si">${</span><span class="nv">ZDOTDIR</span><span class="si">}</span><span class="s2">&#34;</span>/tools.d/*.sh<span class="p">;</span> <span class="k">do</span>
</span></span><span class="line"><span class="cl">  <span class="nb">source</span> <span class="s2">&#34;</span><span class="si">${</span><span class="nv">init_script</span><span class="si">}</span><span class="s2">&#34;</span>
</span></span><span class="line"><span class="cl"><span class="k">done</span>
</span></span></code></pre></div></li>
<li>Create chezmoi <code>.tmpl</code> files for each tool and place them in the chezmoi source directory that matches the directory you created in step 1:
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-go-text-template" data-lang="go-text-template"><span class="line"><span class="cl"><span class="cp">{{</span><span class="w"> </span><span class="nx">output</span><span class="w"> </span><span class="s">&#34;starship&#34;</span><span class="w"> </span><span class="s">&#34;init&#34;</span><span class="w"> </span><span class="s">&#34;zsh&#34;</span><span class="w"> </span><span class="s">&#34;--print-full-init&#34;</span><span class="w"> </span><span class="cp">}}</span><span class="x">
</span></span></span></code></pre></div></li>
<li>Call <code>chezmoi apply</code> to generate the init scripts.</li>
</ol>
<p>The only downside here is that you have to re-run <code>chezmoi apply</code> after updating one of the tools because they change their init scripts sometimes. That problem can be solved with <a href="../chezmoi-auto-update">chezmoi auto-updates</a>.</p>
]]></content><category scheme="https://seb.xn--ho-hia.de/categories/snippet" term="snippet" label="snippet"/><category scheme="https://seb.xn--ho-hia.de/tags/chezmoi" term="chezmoi" label="chezmoi"/><category scheme="https://seb.xn--ho-hia.de/tags/dotfiles" term="dotfiles" label="dotfiles"/><category scheme="https://seb.xn--ho-hia.de/tags/shell" term="shell" label="shell"/><category scheme="https://seb.xn--ho-hia.de/tags/performance" term="performance" label="performance"/></entry><entry><title type="html">Maintaining dotfiles with chezmoi</title><link href="https://seb.xn--ho-hia.de/posts/chezmoi-maintenance/?utm_source=atom_feed" rel="alternate" type="text/html"/><link href="https://seb.xn--ho-hia.de/posts/chezmoi-gpg/?utm_source=atom_feed" rel="related" type="text/html" title="Encrypt dotfiles with chezmoi"/><link href="https://seb.xn--ho-hia.de/posts/chezmoi-auto-git/?utm_source=atom_feed" rel="related" type="text/html" title="Manage dotfiles with chezmoi and git"/><link href="https://seb.xn--ho-hia.de/posts/xdg-dot-files/?utm_source=atom_feed" rel="related" type="text/html" title="XDG Base Directory Specification"/><id>https://seb.xn--ho-hia.de/posts/chezmoi-maintenance/</id><published>2021-10-11T00:00:00+00:00</published><updated>2023-01-06T17:32:06+01:00</updated><content type="html"><![CDATA[<p>To make it easier managing many dotfiles with <a href="https://www.chezmoi.io/">chezmoi</a>, a shell function similar to the one below can be used:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl"><span class="k">function</span> m-dotfiles-ok <span class="o">{</span>
</span></span><span class="line"><span class="cl">    <span class="c1"># public</span>
</span></span><span class="line"><span class="cl">    chezmoi add ~/.config/zsh --recursive
</span></span><span class="line"><span class="cl">    chezmoi add ~/.config/sway --recursive
</span></span><span class="line"><span class="cl">    chezmoi add ~/.config/tmux --recursive
</span></span><span class="line"><span class="cl">    chezmoi add ....
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c1"># secrets</span>
</span></span><span class="line"><span class="cl">    chezmoi add --encrypt ~/.config/npm/npmrc
</span></span><span class="line"><span class="cl">    chezmoi add --encrypt ~/.ssh/id_rsa
</span></span><span class="line"><span class="cl">    chezmoi add --encrypt ...
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span></code></pre></div><p>Whenever you feel happy with your current setup, just call <code>m-dotfiles-ok</code> to push changes into the chezmoi source directory. Files will automatically be <a href="../chezmoi-gpg">encrypted</a> with <a href="https://www.gnupg.org/">gpg</a> and <a href="../chezmoi-auto-git">committed/pushed</a> into a <a href="https://git-scm.com/">Git</a> repository if you have done the necessary configuration beforehand.</p>
<p>In general, editing your dotfiles directly as explained in the second option of the <a href="https://www.chezmoi.io/user-guide/frequently-asked-questions/usage/#how-do-i-edit-my-dotfiles-with-chezmoi">FAQ</a> seems easier though. Refactoring your dotfiles is especially easy when the <code>exact_</code> prefix is used for directories. As explained in the <a href="https://www.chezmoi.io/reference/target-types/#directories">documentation</a>, all files that are not managed by <code>chezmoi</code> will be removed, therefore your configuration will always match what is in your source directory.</p>
]]></content><category scheme="https://seb.xn--ho-hia.de/categories/snippet" term="snippet" label="snippet"/><category scheme="https://seb.xn--ho-hia.de/tags/dotfiles" term="dotfiles" label="dotfiles"/><category scheme="https://seb.xn--ho-hia.de/tags/chezmoi" term="chezmoi" label="chezmoi"/></entry><entry><title type="html">Encrypt dotfiles with chezmoi</title><link href="https://seb.xn--ho-hia.de/posts/chezmoi-gpg/?utm_source=atom_feed" rel="alternate" type="text/html"/><link href="https://seb.xn--ho-hia.de/posts/chezmoi-auto-git/?utm_source=atom_feed" rel="related" type="text/html" title="Manage dotfiles with chezmoi and git"/><link href="https://seb.xn--ho-hia.de/posts/xdg-dot-files/?utm_source=atom_feed" rel="related" type="text/html" title="XDG Base Directory Specification"/><id>https://seb.xn--ho-hia.de/posts/chezmoi-gpg/</id><published>2021-09-20T00:00:00+00:00</published><updated>2023-01-08T09:25:44+01:00</updated><content type="html"><![CDATA[<p><strong>RECOMMENDATION</strong>: Use <a href="../chezmoi-age">age</a> instead of <code>gpg</code>.</p>
<p><a href="https://www.chezmoi.io/">chezmoi</a> can use various external tools to <a href="https://www.chezmoi.io/docs/how-to/#keep-data-private">keep data private</a>. <a href="https://www.gnupg.org/">gpg</a> is used by various other tools as well, so chances are that you already have a functional setup on your system. To configure <code>gpg</code> with <code>chezmoi</code>, just set yourself as the recipient like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-toml" data-lang="toml"><span class="line"><span class="cl"><span class="p">[</span><span class="nx">gpg</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">  <span class="nx">recipient</span> <span class="p">=</span> <span class="s2">&#34;your.name@example.com&#34;</span>
</span></span></code></pre></div><p>Calling <code>chezmoi add --encrypt /path/to/secret</code> will now create encrypt the file with your public key which allows you to decrypt them later with your private key.</p>
]]></content><category scheme="https://seb.xn--ho-hia.de/categories/snippet" term="snippet" label="snippet"/><category scheme="https://seb.xn--ho-hia.de/tags/dotfiles" term="dotfiles" label="dotfiles"/><category scheme="https://seb.xn--ho-hia.de/tags/chezmoi" term="chezmoi" label="chezmoi"/><category scheme="https://seb.xn--ho-hia.de/tags/gpg" term="gpg" label="gpg"/><category scheme="https://seb.xn--ho-hia.de/tags/encryption" term="encryption" label="encryption"/></entry><entry><title type="html">Manage dotfiles with chezmoi and git</title><link href="https://seb.xn--ho-hia.de/posts/chezmoi-auto-git/?utm_source=atom_feed" rel="alternate" type="text/html"/><link href="https://seb.xn--ho-hia.de/posts/git-push-only-mirror/?utm_source=atom_feed" rel="related" type="text/html" title="Push-only mirrors for Git Repositories"/><link href="https://seb.xn--ho-hia.de/posts/git-mirror/?utm_source=atom_feed" rel="related" type="text/html" title="Mirror Git Repositories"/><link href="https://seb.xn--ho-hia.de/posts/xdg-dot-files/?utm_source=atom_feed" rel="related" type="text/html" title="XDG Base Directory Specification"/><link href="https://seb.xn--ho-hia.de/posts/gitlab-distributor/?utm_source=atom_feed" rel="related" type="text/html" title="GitLab the Git Distributor"/><link href="https://seb.xn--ho-hia.de/posts/short-git-clones/?utm_source=atom_feed" rel="related" type="text/html" title="Short Git Clones"/><id>https://seb.xn--ho-hia.de/posts/chezmoi-auto-git/</id><published>2021-09-06T00:00:00+00:00</published><updated>2023-01-06T17:32:06+01:00</updated><content type="html"><![CDATA[<p><a href="https://www.chezmoi.io/">chezmoi</a> can automatically commit and push changes to your <a href="https://en.wikipedia.org/wiki/dotfile">dotfiles</a> into a (remote) <a href="https://git-scm.com/">Git</a> repository. Enable it with the following snippet in your <code>chezmoi.toml</code></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-toml" data-lang="toml"><span class="line"><span class="cl"><span class="p">[</span><span class="nx">sourceVCS</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">    <span class="nx">autoCommit</span> <span class="p">=</span> <span class="kc">true</span>
</span></span><span class="line"><span class="cl">    <span class="nx">autoPush</span> <span class="p">=</span> <span class="kc">true</span>
</span></span></code></pre></div><p>Every time you call <code>chezmoi add /path/to/file</code> will now create a new commit in your local chezmoi repository and push those changes into your configured remote repository.</p>
]]></content><category scheme="https://seb.xn--ho-hia.de/categories/snippet" term="snippet" label="snippet"/><category scheme="https://seb.xn--ho-hia.de/tags/dotfiles" term="dotfiles" label="dotfiles"/><category scheme="https://seb.xn--ho-hia.de/tags/chezmoi" term="chezmoi" label="chezmoi"/><category scheme="https://seb.xn--ho-hia.de/tags/git" term="git" label="git"/></entry><entry><title type="html">XDG Base Directory Specification</title><link href="https://seb.xn--ho-hia.de/posts/xdg-dot-files/?utm_source=atom_feed" rel="alternate" type="text/html"/><id>https://seb.xn--ho-hia.de/posts/xdg-dot-files/</id><published>2020-07-27T00:00:00+00:00</published><updated>2023-01-06T16:22:24+01:00</updated><content type="html"><![CDATA[<p>The <a href="https://specifications.freedesktop.org/basedir-spec/basedir-spec-latest.html">XDG Base Directory Specification</a> has been around for a while, yet not every software has adopted it yet. Here is an incomplete list of fixes:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl"><span class="c1"># use existing env variables or define new</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span> -z <span class="s2">&#34;</span><span class="nv">$XDG_CACHE_HOME</span><span class="s2">&#34;</span>  <span class="o">]</span> <span class="o">&amp;&amp;</span> <span class="nb">export</span> <span class="nv">XDG_CACHE_HOME</span><span class="o">=</span><span class="s2">&#34;</span><span class="nv">$HOME</span><span class="s2">/.cache&#34;</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span> -z <span class="s2">&#34;</span><span class="nv">$XDG_CONFIG_DIRS</span><span class="s2">&#34;</span> <span class="o">]</span> <span class="o">&amp;&amp;</span> <span class="nb">export</span> <span class="nv">XDG_CONFIG_DIRS</span><span class="o">=</span><span class="s2">&#34;/etc/xdg&#34;</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span> -z <span class="s2">&#34;</span><span class="nv">$XDG_CONFIG_HOME</span><span class="s2">&#34;</span> <span class="o">]</span> <span class="o">&amp;&amp;</span> <span class="nb">export</span> <span class="nv">XDG_CONFIG_HOME</span><span class="o">=</span><span class="s2">&#34;</span><span class="nv">$HOME</span><span class="s2">/.config&#34;</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span> -z <span class="s2">&#34;</span><span class="nv">$XDG_DATA_DIRS</span><span class="s2">&#34;</span>   <span class="o">]</span> <span class="o">&amp;&amp;</span> <span class="nb">export</span> <span class="nv">XDG_DATA_DIRS</span><span class="o">=</span><span class="s2">&#34;/usr/local/share:/usr/share&#34;</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span> -z <span class="s2">&#34;</span><span class="nv">$XDG_DATA_HOME</span><span class="s2">&#34;</span>   <span class="o">]</span> <span class="o">&amp;&amp;</span> <span class="nb">export</span> <span class="nv">XDG_DATA_HOME</span><span class="o">=</span><span class="s2">&#34;</span><span class="nv">$HOME</span><span class="s2">/.local/share&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># gradle</span>
</span></span><span class="line"><span class="cl"><span class="nb">export</span> <span class="nv">GRADLE_USER_HOME</span><span class="o">=</span><span class="s2">&#34;</span><span class="nv">$XDG_DATA_HOME</span><span class="s2">/gradle&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># httpie</span>
</span></span><span class="line"><span class="cl"><span class="nb">export</span> <span class="nv">HTTPIE_CONFIG_DIR</span><span class="o">=</span><span class="s2">&#34;</span><span class="nv">$XDG_CONFIG_HOME</span><span class="s2">/httpie&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># npm</span>
</span></span><span class="line"><span class="cl"><span class="nb">export</span> <span class="nv">NPM_CONFIG_USERCONFIG</span><span class="o">=</span><span class="s2">&#34;</span><span class="nv">$XDG_CONFIG_HOME</span><span class="s2">/npm/npmrc&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nb">export</span> <span class="nv">npm_config_cache</span><span class="o">=</span><span class="s2">&#34;</span><span class="nv">$XDG_CACHE_HOME</span><span class="s2">/npm&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># password-store</span>
</span></span><span class="line"><span class="cl"><span class="nb">export</span> <span class="nv">PASSWORD_STORE_DIR</span><span class="o">=</span><span class="s2">&#34;</span><span class="nv">$XDG_DATA_HOME</span><span class="s2">/password-store&#34;</span>
</span></span></code></pre></div><p>To make your own software XDG-aware, consider using the <a href="https://github.com/dirs-dev">dirs-dev</a> or <a href="https://github.com/shibukawa/configdir">configdir</a> libraries.</p>
]]></content><category scheme="https://seb.xn--ho-hia.de/categories/snippet" term="snippet" label="snippet"/><category scheme="https://seb.xn--ho-hia.de/tags/dotfiles" term="dotfiles" label="dotfiles"/><category scheme="https://seb.xn--ho-hia.de/tags/xdg" term="xdg" label="xdg"/></entry></feed>