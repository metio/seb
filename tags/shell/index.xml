<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Shell on Sebastian Hoß</title><link>https://seb.xn--ho-hia.de/tags/shell/</link><description>Recent content in Shell on Sebastian Hoß</description><generator>Hugo</generator><language>en</language><lastBuildDate>Fri, 06 Jan 2023 16:40:24 +0100</lastBuildDate><atom:link href="https://seb.xn--ho-hia.de/tags/shell/index.xml" rel="self" type="application/rss+xml"/><item><title>chezmoi &amp; shell init scripts</title><link>https://seb.xn--ho-hia.de/posts/shell-init/</link><pubDate>Mon, 12 Dec 2022 00:00:00 +0000</pubDate><guid>https://seb.xn--ho-hia.de/posts/shell-init/</guid><description>Many CLI applications offer initialization scripts to integrate into a shell, for example starship init zsh or zoxide init zsh. The documentation of these tools usually tell you to put something like eval &amp;quot;$(starship init zsh)&amp;quot; into your shell RC file. While this approach works fine, it does decrease startup speed of your shell because it needs to run the init command every time you open a new shell. Given that you open shells much more often than new versions of these tools are released and installed, you can cache the output of these commands to get a bit of speed back.</description></item><item><title>Automatically update plugins for vim/nvim</title><link>https://seb.xn--ho-hia.de/posts/nvim-plugin-auto-updates/</link><pubDate>Sat, 01 Jan 2022 00:00:00 +0000</pubDate><guid>https://seb.xn--ho-hia.de/posts/nvim-plugin-auto-updates/</guid><description>Both Vim and Neovim have a built-in plugin mechanism that loads plugins from ~/.vim/pack/*/{start,opt}/* (Vim) or ~/.local/share/nvim/site/pack/*/{start,opt}/* (Neovim). All you have to do to install new plugins, is to git clone their repository into those directories. To automatically update those clones, create the following script:
#!/usr/bin/env zsh ############################################################################### # This script git-pulls all installed nvim plugins which are using the built-in # nvim plugin manager. Those plugins are located in .</description></item></channel></rss>