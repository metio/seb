<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Maven on Sebastian Hoß</title><link>https://seb.xn--ho-hia.de/tags/maven/</link><description>Recent content in Maven on Sebastian Hoß</description><generator>Hugo</generator><language>en</language><lastBuildDate>Fri, 06 Jan 2023 17:32:06 +0100</lastBuildDate><atom:link href="https://seb.xn--ho-hia.de/tags/maven/index.xml" rel="self" type="application/rss+xml"/><item><title>Continuous Versioning with Maven</title><link>https://seb.xn--ho-hia.de/posts/maven-cd-versioning/</link><pubDate>Mon, 06 Dec 2021 00:00:00 +0000</pubDate><guid>https://seb.xn--ho-hia.de/posts/maven-cd-versioning/</guid><description>To automatically version Maven projects, I like to use the m-versions-p like this:
$ mvn versions:set -DnewVersion=my.new.version -DgenerateBackupPoms=false This will update the version property of every module in the reactor to prepare them for the next release. In case you are using GitHub Actions, consider using a timestamp.</description></item><item><title>GitHub Packages with Maven</title><link>https://seb.xn--ho-hia.de/posts/github-maven-packages/</link><pubDate>Mon, 22 Nov 2021 00:00:00 +0000</pubDate><guid>https://seb.xn--ho-hia.de/posts/github-maven-packages/</guid><description>GitHub Packages can be used to host Maven packages with the following configuration in your ~/.m2/settings.xml:
&amp;lt;settings&amp;gt; &amp;lt;profiles&amp;gt; &amp;lt;profile&amp;gt; &amp;lt;id&amp;gt;github&amp;lt;/id&amp;gt; &amp;lt;repositories&amp;gt; &amp;lt;repository&amp;gt; &amp;lt;id&amp;gt;maven-build-process&amp;lt;/id&amp;gt; &amp;lt;name&amp;gt;GitHub maven-build-process Apache Maven Packages&amp;lt;/name&amp;gt; &amp;lt;url&amp;gt;https://maven.pkg.github.com/metio/maven-build-process&amp;lt;/url&amp;gt; &amp;lt;releases&amp;gt; &amp;lt;enabled&amp;gt;true&amp;lt;/enabled&amp;gt; &amp;lt;/releases&amp;gt; &amp;lt;snapshots&amp;gt; &amp;lt;enabled&amp;gt;true&amp;lt;/enabled&amp;gt; &amp;lt;/snapshots&amp;gt; &amp;lt;/repository&amp;gt; &amp;lt;repository&amp;gt; &amp;lt;id&amp;gt;hcf4j&amp;lt;/id&amp;gt; &amp;lt;name&amp;gt;GitHub hcf4j Apache Maven Packages&amp;lt;/name&amp;gt; &amp;lt;url&amp;gt;https://maven.pkg.github.com/metio/hcf4j&amp;lt;/url&amp;gt; &amp;lt;releases&amp;gt; &amp;lt;enabled&amp;gt;true&amp;lt;/enabled&amp;gt; &amp;lt;/releases&amp;gt; &amp;lt;snapshots&amp;gt; &amp;lt;enabled&amp;gt;true&amp;lt;/enabled&amp;gt; &amp;lt;/snapshots&amp;gt; &amp;lt;/repository&amp;gt; &amp;lt;/repositories&amp;gt; &amp;lt;/profile&amp;gt; &amp;lt;/profiles&amp;gt; &amp;lt;servers&amp;gt; &amp;lt;server&amp;gt; &amp;lt;id&amp;gt;maven-build-process&amp;lt;/id&amp;gt; &amp;lt;username&amp;gt;USERNAME&amp;lt;/username&amp;gt; &amp;lt;password&amp;gt;GITHUB_TOKEN&amp;lt;/password&amp;gt; &amp;lt;/server&amp;gt; &amp;lt;server&amp;gt; &amp;lt;id&amp;gt;hcf4j&amp;lt;/id&amp;gt; &amp;lt;username&amp;gt;USERNAME&amp;lt;/username&amp;gt; &amp;lt;password&amp;gt;GITHUB_TOKEN&amp;lt;/password&amp;gt; &amp;lt;/server&amp;gt; &amp;lt;/servers&amp;gt; &amp;lt;/settings&amp;gt; You will have to add another repository/server for each project you are fetching from GitHub.</description></item><item><title>Google Central</title><link>https://seb.xn--ho-hia.de/posts/maven-google-central/</link><pubDate>Mon, 08 Nov 2021 00:00:00 +0000</pubDate><guid>https://seb.xn--ho-hia.de/posts/maven-google-central/</guid><description>Some time ago, Google started hosting a copy of Maven Central. Configure it in your ~/.m2/settings.xml like this:
&amp;lt;settings&amp;gt; &amp;lt;mirrors&amp;gt; &amp;lt;mirror&amp;gt; &amp;lt;id&amp;gt;google-maven-central&amp;lt;/id&amp;gt; &amp;lt;name&amp;gt;Google Maven Central (Asia)&amp;lt;/name&amp;gt; &amp;lt;url&amp;gt;https://maven-central-asia.storage-download.googleapis.com/maven2/&amp;lt;/url&amp;gt; &amp;lt;mirrorOf&amp;gt;central&amp;lt;/mirrorOf&amp;gt; &amp;lt;/mirror&amp;gt; &amp;lt;mirror&amp;gt; &amp;lt;id&amp;gt;google-maven-central&amp;lt;/id&amp;gt; &amp;lt;name&amp;gt;Google Maven Central (EU)&amp;lt;/name&amp;gt; &amp;lt;url&amp;gt;https://maven-central-eu.storage-download.googleapis.com/maven2/&amp;lt;/url&amp;gt; &amp;lt;mirrorOf&amp;gt;central&amp;lt;/mirrorOf&amp;gt; &amp;lt;/mirror&amp;gt; &amp;lt;mirror&amp;gt; &amp;lt;id&amp;gt;google-maven-central&amp;lt;/id&amp;gt; &amp;lt;name&amp;gt;Google Maven Central (US)&amp;lt;/name&amp;gt; &amp;lt;url&amp;gt;https://maven-central.storage-download.googleapis.com/maven2/&amp;lt;/url&amp;gt; &amp;lt;mirrorOf&amp;gt;central&amp;lt;/mirrorOf&amp;gt; &amp;lt;/mirror&amp;gt; &amp;lt;/mirrors&amp;gt; &amp;lt;/settings&amp;gt; Pick the mirror nearest to your location to get best speeds.</description></item><item><title>Specify encoding for Maven projects</title><link>https://seb.xn--ho-hia.de/posts/maven-encoding/</link><pubDate>Mon, 31 May 2021 00:00:00 +0000</pubDate><guid>https://seb.xn--ho-hia.de/posts/maven-encoding/</guid><description>Maven projects by default use the file encoding of the operating system. This can be problematic in case different operating systems with different encoding settings are used to build the project. Specify the encoding of your source code and resource files as in the following snippets to fix that problem.
&amp;lt;properties&amp;gt; &amp;lt;project.build.sourceEncoding&amp;gt;UTF-8&amp;lt;/project.build.sourceEncoding&amp;gt; &amp;lt;project.reporting.outputEncoding&amp;gt;UTF-8&amp;lt;/project.reporting.outputEncoding&amp;gt; &amp;lt;/properties&amp;gt; Links https://maven.apache.org/pom.html#Properties</description></item><item><title>Creating reproducible artifacts with Maven</title><link>https://seb.xn--ho-hia.de/posts/maven-reproducible/</link><pubDate>Mon, 17 May 2021 00:00:00 +0000</pubDate><guid>https://seb.xn--ho-hia.de/posts/maven-reproducible/</guid><description>To create reproducible builds with Maven projects, it&amp;rsquo;s enough to specify the project.build.outputTimestamp property like this:
&amp;lt;properties&amp;gt; &amp;lt;project.build.outputTimestamp&amp;gt;2020&amp;lt;/project.build.outputTimestamp&amp;gt; &amp;lt;/properties&amp;gt; Links https://maven.apache.org/pom.html#Properties https://maven.apache.org/guides/mini/guide-reproducible-builds.html https://github.com/rodiontsev/maven-build-info-plugin https://github.com/phax/ph-buildinfo-maven-plugin https://github.com/Zlika/reproducible-build-maven-plugin</description></item><item><title>Analyze Maven projects with SonarCloud using GitHub Actions</title><link>https://seb.xn--ho-hia.de/posts/maven-github-sonarcloud/</link><pubDate>Mon, 03 May 2021 00:00:00 +0000</pubDate><guid>https://seb.xn--ho-hia.de/posts/maven-github-sonarcloud/</guid><description>To analyze Maven projects with SonarCloud using GitHub Actions, first create the following settings.xml file:
&amp;lt;settings xmlns=&amp;#34;http://maven.apache.org/SETTINGS/1.0.0&amp;#34; xmlns:xsi=&amp;#34;http://www.w3.org/2001/XMLSchema-instance&amp;#34; xsi:schemaLocation=&amp;#34;http://maven.apache.org/SETTINGS/1.0.0 http://maven.apache.org/xsd/settings-1.0.0.xsd&amp;#34;&amp;gt; &amp;lt;pluginGroups&amp;gt; &amp;lt;pluginGroup&amp;gt;org.sonarsource.scanner.maven&amp;lt;/pluginGroup&amp;gt; &amp;lt;/pluginGroups&amp;gt; &amp;lt;activeProfiles&amp;gt; &amp;lt;activeProfile&amp;gt;sonar&amp;lt;/activeProfile&amp;gt; &amp;lt;/activeProfiles&amp;gt; &amp;lt;profiles&amp;gt; &amp;lt;profile&amp;gt; &amp;lt;id&amp;gt;sonar&amp;lt;/id&amp;gt; &amp;lt;properties&amp;gt; &amp;lt;sonar.host.url&amp;gt;https://sonarcloud.io&amp;lt;/sonar.host.url&amp;gt; &amp;lt;sonar.organization&amp;gt;YOUR_ORG&amp;lt;/sonar.organization&amp;gt; &amp;lt;sonar.projectKey&amp;gt;YOUR_PROJECT&amp;lt;/sonar.projectKey&amp;gt; &amp;lt;sonar.login&amp;gt;${env.SONAR_TOKEN}&amp;lt;/sonar.login&amp;gt; &amp;lt;/properties&amp;gt; &amp;lt;/profile&amp;gt; &amp;lt;/profiles&amp;gt; &amp;lt;/settings&amp;gt; Finally, add a step to your workflow:
- name: Verify Project run: mvn --settings $GITHUB_WORKSPACE/settings.xml verify sonar:sonar env: SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }} Links https://maven.apache.org/settings.html https://docs.sonarqube.org/latest/analysis/scan/sonarscanner-for-maven/</description></item><item><title>Cache Maven artifacts with GitHub Actions</title><link>https://seb.xn--ho-hia.de/posts/github-actions-cache-maven-artifacts/</link><pubDate>Mon, 07 Sep 2020 00:00:00 +0000</pubDate><guid>https://seb.xn--ho-hia.de/posts/github-actions-cache-maven-artifacts/</guid><description>The actions/cache action allows to cache artifacts in your GitHub Action.
name: &amp;lt;PIPELINE&amp;gt; jobs: build: runs-on: &amp;lt;RUN_ON&amp;gt; steps: - name: Cache Maven artifacts uses: actions/cache@v1 with: path: ~/.m2/repository key: ${{ runner.os }}-maven-${{ hashFiles(&amp;#39;**/pom.xml&amp;#39;) }} restore-keys: | ${{ runner.os }}-maven- &amp;lt;PIPELINE&amp;gt;: The name of your pipeline. &amp;lt;RUN_ON&amp;gt;: The runner to use, see GitHub&amp;rsquo;s own documentation for possible values.</description></item></channel></rss>