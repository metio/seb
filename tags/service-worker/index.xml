<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Service Worker on Sebastian Hoß</title><link>https://seb.xn--ho-hia.de/tags/service-worker/</link><description>Recent content in Service Worker on Sebastian Hoß</description><generator>Hugo</generator><language>en</language><lastBuildDate>Fri, 06 Jan 2023 16:40:24 +0100</lastBuildDate><atom:link href="https://seb.xn--ho-hia.de/tags/service-worker/index.xml" rel="self" type="application/rss+xml"/><item><title>Service workers with Hugo</title><link>https://seb.xn--ho-hia.de/posts/hugo-serviceworkers/</link><pubDate>Mon, 25 Jan 2021 00:00:00 +0000</pubDate><guid>https://seb.xn--ho-hia.de/posts/hugo-serviceworkers/</guid><description>To use a serviceworker to cache a Hugo site, configure a media type in your config.toml:
[mediaTypes.&amp;#34;application/javascript&amp;#34;] suffixes = [&amp;#34;js&amp;#34;] [outputFormats.ServiceWorker] name = &amp;#34;ServiceWorker&amp;#34; mediaType = &amp;#34;application/javascript&amp;#34; baseName = &amp;#34;serviceworker&amp;#34; isPlainText = false rel = &amp;#34;alternate&amp;#34; isHTML = false noUgly = true permalinkable = false Create a new layout in _default/home.serviceworker.js with the following content:
const CACHE = &amp;#39;cache-and-update&amp;#39;; self.addEventListener(&amp;#39;install&amp;#39;, (event) =&amp;gt; { event.waitUntil(precache()); }); self.addEventListener(&amp;#39;fetch&amp;#39;, (event) =&amp;gt; { event.respondWith(fromCache(event.request)); event.</description></item></channel></rss>